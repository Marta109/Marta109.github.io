{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","services/MarvelServices.js","hooks/http.hook.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorBoundary/ErrorBoundary.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/pages/MainPage.js","components/pages/Page404.js","components/pages/SingleComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","AppBanner","src","avengers","alt","avengersLogo","useMarvelServices","useState","loading","setLoding","error","setError","request","useCallback","url","method","body","headers","fetch","respnse","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apikey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComics","char","name","description","slice","thumbnailStyle","thumbnail","path","includes","extension","homepage","urls","wiki","comics","items","title","price","prices","pages","pageCount","descriptionLanguage","textObjects","language","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","img","ComicsList","comicsData","setComicsData","newItemLoading","setNewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","inital","then","onComicsLoaded","newComicsData","endComics","length","comicsListItems","item","i","spinner","errorMessage","disabled","onClick","ComicsPage","ErrorBoundary","state","infoError","this","setState","console","log","props","children","React","Component","RandomChar","setChar","updateChar","timerId","setInterval","clearInterval","onCharLoadid","randomId","Math","floor","random","content","mjolnir","View","imgStyle","href","CharList","charData","setCharData","charEnded","setCharEnded","charsRefArr","useRef","onCharLoaded","newCharData","endChar","charListItems","onselectChar","onSelectChar","ref","elRef","current","forEach","el","classList","remove","add","focus","onCreateCharList","Skeleton","CharInfo","charId","skeleton","MainPage","selectdCharId","setSelectdCharId","decoration","Page404","textAlign","fontWeight","fontSize","marginTop","comic","SingleComicPage","setComic","comicId","useParams","updateComics","App","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.04036d3e.chunk.js","sourcesContent":["import {Link, NavLink} from \"react-router-dom\";\r\nimport \"./appHeader.scss\";\r\n\r\nconst AppHeader = () => {\r\n  return (\r\n    <header className=\"app__header\">\r\n      <h1 className=\"app__title\">\r\n        <Link to=\"/MARVEL\">\r\n          <span>Marvel</span> information portal\r\n        </Link>\r\n      </h1>\r\n      <nav className=\"app__menu\">\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              end\r\n              style={({isActive}) => ({\r\n                color: isActive ? \"#9f0013\" : \"inherit\",\r\n              })}\r\n              to=\"/MARVEL\">\r\n              Characters\r\n            </NavLink>\r\n          </li>\r\n          /\r\n          <li>\r\n            <NavLink\r\n              end\r\n              style={({isActive}) => ({\r\n                color: isActive ? \"#9f0013\" : \"inherit\",\r\n              })}\r\n              to=\"/comics\">\r\n              Comics\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import {useHttp} from \"../hooks/http.hook\";\r\n\r\nconst useMarvelServices = () => {\r\n  const {loading, error, request, clearError} = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\",\r\n    _apikey = \"apikey=a4c83daddd16d8320882f8697640d04c\",\r\n    _baseOffsetCharacters = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffsetCharacters) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apikey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apikey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?limit=8&offset=${offset}&${_apikey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComics = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apikey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnailStyle: char.thumbnail.path.includes(\"image_not_available\")\r\n        ? true\r\n        : false,\r\n      // thumbnail: char.thumbnail.path.includes('image_not_available')?\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available \",\r\n      description: comics.description || \"There is no description\",\r\n      pages: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages \",\r\n      // descriptionLanguage: comics.textObjects[0]language,\r\n      descriptionLanguage: comics.textObjects[0]?.language || \"en-us\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    clearError,\r\n    getAllComics,\r\n    getComics,\r\n  };\r\n};\r\n\r\nexport default useMarvelServices;\r\n\r\n// class MarvelServices {\r\n//   _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n//   _apikey = \"apikey=a4c83daddd16d8320882f8697640d04c\";\r\n//   _baseOffsetCharacters = 210;\r\n\r\n//   getResource = async (url) => {\r\n//     const res = await fetch(url);\r\n//     if (!res.ok) {\r\n//       throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n//     }\r\n//     return await res.json();\r\n//   };\r\n\r\n//   getAllCharacters = async (offset=this._baseOffsetCharacters) => {\r\n//     const res = await this.getResource(\r\n//       `${this._apiBase}characters?limit=9&offset=${offset}&${this._apikey}`\r\n//     );\r\n//     return res.data.results.map(this._transformCharacter);\r\n//   };\r\n\r\n//   getCharacter = async (id) => {\r\n//     const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apikey}`);\r\n//     return this._transformCharacter(res.data.results[0]);\r\n//   };\r\n\r\n//   _transformCharacter = (char) => {\r\n//     return {\r\n//       id: char.id,\r\n//       name: char.name,\r\n//       description: char.description\r\n//         ? `${char.description.slice(0, 210)}...`\r\n//         : \"There is no description for this character\",\r\n//       thumbnailStyle: char.thumbnail.path.includes(\"image_not_available\") ? true : false,\r\n//       // thumbnail: char.thumbnail.path.includes('image_not_available')?\r\n//       thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n//       homepage: char.urls[0].url,\r\n//       wiki: char.urls[1].url,\r\n//       comics: char.comics.items,\r\n//     };\r\n//   };\r\n// }\r\n\r\n// export default MarvelServices;\r\n","import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoding] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = {\"Content-Type\": \"application/json\"}\r\n    ) => {\r\n      setLoding(true);\r\n      try {\r\n        const respnse = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n        });\r\n        if (!respnse.ok) {\r\n          throw new Error(\r\n            `Could not fetch ${url}, status: ${respnse.status}`\r\n          );\r\n        }\r\n        const data = await respnse.json();\r\n        setLoding(false);\r\n        return data;\r\n      } catch (error) {\r\n        setLoding(false);\r\n        setError(error.message);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return {loading, error, request, clearError};\r\n};\r\n","const Spinner = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      style={{margin: \"0 auto\", background: \"none\", display: \"block\"}}\r\n      width=\"200px\"\r\n      height=\"200px\"\r\n      viewBox=\"0 0 100 100\"\r\n      preserveAspectRatio=\"xMidYMid\">\r\n      <g transform=\"translate(80,50)\">\r\n        <g transform=\"rotate(0)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.875s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.875s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n        <g transform=\"rotate(45)\">\r\n          <circle\r\n            cx=\"0\"\r\n            cy=\"0\"\r\n            r=\"7\"\r\n            fill=\"#1c4595\"\r\n            fillOpacity=\"0.875\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.75s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.75s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(50,80)\">\r\n        <g transform=\"rotate(90)\">\r\n          <circle\r\n            cx=\"0\"\r\n            cy=\"0\"\r\n            r=\"7\"\r\n            fill=\"#1c4595\"\r\n            fillOpacity=\"0.75\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.625s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.625s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n        <g transform=\"rotate(135)\">\r\n          <circle\r\n            cx=\"0\"\r\n            cy=\"0\"\r\n            r=\"7\"\r\n            fill=\"#1c4595\"\r\n            fillOpacity=\"0.625\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.5s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.5s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(20,50.00000000000001)\">\r\n        <g transform=\"rotate(180)\">\r\n          <circle\r\n            cx=\"0\"\r\n            cy=\"0\"\r\n            r=\"7\"\r\n            fill=\"#1c4595\"\r\n            fillOpacity=\"0.5\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.375s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.375s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n        <g transform=\"rotate(225)\">\r\n          <circle\r\n            cx=\"0\"\r\n            cy=\"0\"\r\n            r=\"7\"\r\n            fill=\"#1c4595\"\r\n            fillOpacity=\"0.375\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.25s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.25s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(49.99999999999999,20)\">\r\n        <g transform=\"rotate(270)\">\r\n          <circle\r\n            cx=\"0\"\r\n            cy=\"0\"\r\n            r=\"7\"\r\n            fill=\"#1c4595\"\r\n            fillOpacity=\"0.25\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.125s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.125s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n        <g transform=\"rotate(315)\">\r\n          <circle\r\n            cx=\"0\"\r\n            cy=\"0\"\r\n            r=\"7\"\r\n            fill=\"#1c4595\"\r\n            fillOpacity=\"0.125\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"0s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"0s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\",\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import \"./comicsList.scss\";\r\n// import uw from \"../../resources/img/UW.png\";\r\n// import xMen from \"../../resources/img/x-men.png\";\r\nimport useMarvelServices from \"../../services/MarvelServices\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ComicsList = () => {\r\n  const [comicsData, setComicsData] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(0);\r\n  const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n  const {loading, error, getAllComics} = useMarvelServices();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []);\r\n  const onRequest = (offset, inital) => {\r\n    inital ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllComics(offset).then(onComicsLoaded);\r\n  };\r\n\r\n  const onComicsLoaded = (newComicsData) => {\r\n    let endComics = false;\r\n    if (newComicsData.length < 8) {\r\n      endComics = true;\r\n    }\r\n    setComicsData((comicsData) => [...comicsData, ...newComicsData]);\r\n    setNewItemLoading(false);\r\n    setOffset((offset) => offset + 8);\r\n    setComicsEnded(endComics);\r\n  };\r\n\r\n  const onCreateComicsList = (data) => {\r\n    return data.map((item, i) => {\r\n      return (\r\n        <li  className=\"comics__item\"key={i}>\r\n          <Link to={`/comics/${item.id}`}>\r\n            <img\r\n              src={item.thumbnail}\r\n              alt={item.title}\r\n              className=\"comics__item-img\"\r\n            />\r\n            <div className=\"comics__item-name\">{item.title}</div>\r\n            <div className=\"comics__item-price\">{item.price}$</div>\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  const comicsListItems = onCreateComicsList(comicsData);\r\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  return (\r\n    <div className=\"comics__list\">\r\n      {spinner}\r\n      {errorMessage}\r\n      <ul className=\"comics__grid\">{comicsListItems}</ul>\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        style={{display: comicsEnded ? \"none\" : \"block\"}}\r\n        disabled={newItemLoading}\r\n        onClick={() => {\r\n          onRequest(offset);\r\n        }}>\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicsList;\r\n","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import React from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, infoError) {\r\n    this.setState({error: true});\r\n    console.log(error, infoError);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <h2> Something went wrong</h2>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import \"./randomChar.scss\";\r\n// import thor from \"../../resources/img/thor.jpeg\";\r\nimport mjolnir from \"../../resources/img/mjolnir.png\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport useMarvelServices from \"../../services/MarvelServices\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nconst RandomChar = () => {\r\n  const [char, setChar] = useState({});\r\n  const {loading, error, getCharacter, clearError} = useMarvelServices();\r\n  // const [loding, setLoding] = useState(true);\r\n  // const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    const timerId = setInterval(updateChar, 60000);\r\n    return () => {\r\n      clearInterval(timerId);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onCharLoadid = (char) => {\r\n    setChar(char);\r\n    // setLoding(false);\r\n  };\r\n\r\n  // const onCharLoading = () => {\r\n  //   setLoding(true);\r\n  // };\r\n\r\n  // const onError = () => {\r\n  //   setLoding(false);\r\n  //   setError(true);\r\n  // };\r\n\r\n  const updateChar = () => {\r\n    // const randomChar = new MarvelServices();\r\n    clearError();\r\n    const randomId = Math.floor(\r\n      Math.random() * (1011400 - 1011000) + 1011000\r\n    );\r\n    // onCharLoading();\r\n    // randomChar.getCharacter(randomId).then(onCharLoadid).catch(onError);\r\n    getCharacter(randomId).then(onCharLoadid);\r\n  };\r\n\r\n  const newRandomChar = () => {\r\n    // setError(false);\r\n    // setLoding(true);\r\n    updateChar();\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character for today!\r\n          <br />\r\n          Do you want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">Or choose another one</p>\r\n        <button className=\"button button__main\" onClick={newRandomChar}>\r\n          <div className=\"inner\">try it</div>\r\n        </button>\r\n        <img\r\n          src={mjolnir}\r\n          alt=\"mjolnir\"\r\n          className=\"randomchar__decoration\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomChar;\r\n\r\n// class RandomChar extends React.Component {\r\n//   state = {\r\n//     char: {},\r\n//     loding: true,\r\n//     error: false,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     this.updateChar();\r\n//   }\r\n//   onCharLoadid = (char) => {\r\n//     this.setState({char, loding: false});\r\n//   };\r\n\r\n//   onCharLoading = () => {\r\n//     this.setState({loding: true});\r\n//   };\r\n\r\n//   onError = () => {\r\n//     this.setState({loding: false, error: true});\r\n//   };\r\n//   updateChar = () => {\r\n//     const randomChar = new MarvelServices();\r\n//     const randomId = Math.floor(\r\n//       Math.random() * (1011400 - 1011000) + 1011000\r\n//     );\r\n//     this.onCharLoading();\r\n//     randomChar\r\n//       .getCharacter(randomId)\r\n//       .then(this.onCharLoadid)\r\n//       .catch(this.onError);\r\n//   };\r\n//   //    randomChar.getRandomCharacter()\r\n\r\n//   newRandomChar = () => {\r\n//     this.setState({error: false, loding: true});\r\n//     this.updateChar();\r\n//   };\r\n\r\n//   render() {\r\n//     const {char, loding, error} = this.state;\r\n//     const errorMessage = error ? <ErrorMessage /> : null;\r\n//     const spinner = loding ? <Spinner /> : null;\r\n//     const content = !(loding || error) ? <View char={char} /> : null;\r\n//     // if (error) {\r\n//     //   return <ErrorMessage />;\r\n//     // }\r\n\r\n//     return (\r\n//       <div className=\"randomchar\">\r\n//         {/* {loding ? <Spinner /> : <View char={char} />} */}\r\n//         {errorMessage}\r\n//         {spinner}\r\n//         {content}\r\n//         <div className=\"randomchar__static\">\r\n//           <p className=\"randomchar__title\">\r\n//             Random character for today!\r\n//             <br />\r\n//             Do you want to get to know him better?\r\n//           </p>\r\n//           <p className=\"randomchar__title\">Or choose another one</p>\r\n//           <button\r\n//             className=\"button button__main\"\r\n//             onClick={this.newRandomChar}>\r\n//             <div className=\"inner\">try it</div>\r\n//           </button>\r\n//           <img\r\n//             src={mjolnir}\r\n//             alt=\"mjolnir\"\r\n//             className=\"randomchar__decoration\"\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default RandomChar;\r\n\r\nfunction View({char}) {\r\n  const {name, description, thumbnail, wiki, homepage} = char;\r\n  let imgStyle = {objectFit: \"cover\"};\r\n  if (\r\n    thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n  ) {\r\n    imgStyle = {objectFit: \"contain\"};\r\n  }\r\n\r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img\r\n        src={thumbnail}\r\n        alt=\"Random character\"\r\n        className=\"randomchar__img\"\r\n        style={imgStyle}\r\n      />\r\n      <div className=\"randomchar__info\">\r\n        <p className=\"randomchar__name\">{name}</p>\r\n        <p className=\"randomchar__descr\">{description}</p>\r\n        <div className=\"randomchar__btns\">\r\n          <a href={homepage} className=\"button button__main\">\r\n            <div className=\"inner\">homepage</div>\r\n          </a>\r\n          <a href={wiki} className=\"button button__secondary\">\r\n            <div className=\"inner\">Wiki</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useMarvelServices from \"../../services/MarvelServices\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport \"./charList.scss\";\r\n// import abyss from \"../../resources/img/abyss.jpg\";\r\n\r\nconst CharList = (props) => {\r\n  const {loading, error, getAllCharacters} = useMarvelServices();\r\n  const [charData, setCharData] = useState([]);\r\n  // const [load, setLoad] = useState(true);\r\n  // const [error, setError] = useState(false);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(210);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const charsRefArr = useRef([]);\r\n  // const marvelService = new MarvelServices();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onRequest = (offset, inital) => {\r\n    inital ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    // onCharLoading();\r\n    getAllCharacters(offset).then(onCharLoaded);\r\n  };\r\n\r\n  // const onCharLoading = () => {\r\n  //   setNewItemLoading(true);\r\n  // };\r\n\r\n  const onCharLoaded = (newCharData) => {\r\n    let endChar = false;\r\n    if (newCharData.length < 9) {\r\n      endChar = true;\r\n    }\r\n    setCharData((charData) => [...charData, ...newCharData]);\r\n    // setLoad(false);\r\n    setNewItemLoading(false);\r\n    setOffset((offset) => offset + 9);\r\n    setCharEnded(endChar);\r\n  };\r\n\r\n  // const onError = () => {\r\n  //   setError(true);\r\n  //   setLoad(false);\r\n  // };\r\n\r\n  const onSetFocus = (id) => {\r\n    charsRefArr.current.forEach((el) =>\r\n      el.classList.remove(\"char__item_selected\")\r\n    );\r\n    charsRefArr.current[id].classList.add(\"char__item_selected\");\r\n    charsRefArr.current[id].focus();\r\n  };\r\n\r\n  const onCreateCharList = (data) => {\r\n    let onselectChar = props.onSelectChar;\r\n    return data.map((item, i) => {\r\n      let imgStyle = {objectFit: \"cover\"};\r\n      if (\r\n        item.thumbnail ===\r\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ) {\r\n        imgStyle = {objectFit: \"unset\"};\r\n      }\r\n      return (\r\n        <li\r\n          key={item.id}\r\n          className=\"char__item\"\r\n          ref={(elRef) => (charsRefArr.current[i] = elRef)}\r\n          onClick={() => {\r\n            onselectChar(item.id);\r\n            onSetFocus(i);\r\n          }}>\r\n          <img src={item.thumbnail} alt=\"abyss\" style={imgStyle} />\r\n          <div className=\"char__name\">{item.name}</div>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const charListItems = onCreateCharList(charData);\r\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  // const charList = !(loading || errorMessage) ? charListItems : null;\r\n\r\n  return (\r\n    <div className=\"char__list\">\r\n      {spinner}\r\n      {errorMessage}\r\n      <ul className=\"char__grid\">{charListItems}</ul>\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        style={{display: charEnded ? \"none\" : \"block\"}}\r\n        disabled={newItemLoading}\r\n        onClick={() => {\r\n          onRequest(offset);\r\n        }}>\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharList.propTypes = {\r\n  onSelectChar: PropTypes.func,\r\n};\r\nexport default CharList;\r\n\r\n// class CharList extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       charData: [],\r\n//       load: true,\r\n//       error: false,\r\n//       newItemLoading: false,\r\n//       offset: 210,\r\n//       charEnded: false,\r\n//     };\r\n//   }\r\n\r\n//   charsRefArr = [];\r\n//   marvelService = new MarvelServices();\r\n\r\n//   componentDidMount() {\r\n//     this.onRequest();\r\n//   }\r\n\r\n//   onRequest = (offset) => {\r\n//     this.onCharLoading();\r\n//     this.marvelService\r\n//       .getAllCharacters(offset)\r\n//       .then(this.onCharLoaded)\r\n//       .catch(this.onError);\r\n//   };\r\n\r\n//   onCharLoading = () => {\r\n//     this.setState({newItemLoading: true});\r\n//   };\r\n\r\n//   onCharLoaded = (newCharData) => {\r\n//     let endChar = false;\r\n//     if (newCharData.length < 9) {\r\n//       endChar = true;\r\n//     }\r\n//     this.setState(({offset, charData}) => ({\r\n//       charData: [...charData, ...newCharData],\r\n//       load: false,\r\n//       newItemLoading: false,\r\n//       offset: offset + 9,\r\n//       charEnded: endChar,\r\n//     }));\r\n//     // this.setState({charData, load: false, newItemLoading: false});\r\n//   };\r\n//   onError = () => {\r\n//     this.setState({error: true, load: false});\r\n//   };\r\n\r\n//   onSetRef = (ref) => {\r\n//     if (ref) {\r\n//       this.charsRefArr.push(ref);\r\n//     }\r\n//   };\r\n\r\n//   onSetFocus = (id) => {\r\n//     this.charsRefArr.forEach((el) =>\r\n//       el.classList.remove(\"char__item_selected\")\r\n//     );\r\n//     this.charsRefArr[id].classList.add(\"char__item_selected\");\r\n//     this.charsRefArr[id].focus();\r\n//   };\r\n\r\n//   onCreateCharList = (data) => {\r\n//     let onselectChar = this.props.onSelectChar;\r\n//     return data.map((item, i) => {\r\n//       let imgStyle = {objectFit: \"cover\"};\r\n//       if (\r\n//         item.thumbnail ===\r\n//         \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n//       ) {\r\n//         imgStyle = {objectFit: \"unset\"};\r\n//       }\r\n//       return (\r\n//         <li\r\n//           key={item.id}\r\n//           className=\"char__item\"\r\n//           ref={this.onSetRef}\r\n//           onClick={() => {\r\n//             onselectChar(item.id);\r\n//             this.onSetFocus(i);\r\n//           }}>\r\n//           <img src={item.thumbnail} alt=\"abyss\" style={imgStyle} />\r\n//           <div className=\"char__name\">{item.name}</div>\r\n//         </li>\r\n//       );\r\n//     });\r\n//   };\r\n//   render() {\r\n//     const {charData, load, error, offset, newItemLoading, charEnded} =\r\n//       this.state;\r\n//     const charListItems = this.onCreateCharList(charData);\r\n//     const spinner = load ? <Spinner /> : null;\r\n//     const errorMessage = error ? <ErrorMessage /> : null;\r\n//     const charList = !(spinner || errorMessage) ? charListItems : null;\r\n\r\n//     return (\r\n//       <div className=\"char__list\">\r\n//         {spinner}\r\n//         {errorMessage}\r\n//         <ul className=\"char__grid\">{charList}</ul>\r\n//         <button\r\n//           className=\"button button__main button__long\"\r\n//           style={{display: charEnded ? \"none\" : \"block\"}}\r\n//           disabled={newItemLoading}\r\n//           onClick={() => {\r\n//             this.onRequest(offset);\r\n//           }}>\r\n//           <div className=\"inner\">load more</div>\r\n//         </button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// CharList.propTypes = {\r\n//   onSelectChar: PropTypes.func,\r\n// };\r\n// export default CharList;\r\n","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useMarvelServices from \"../../services/MarvelServices\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport Skeleton from \"../skeleton/Skeleton\";\r\n\r\nimport \"./charInfo.scss\";\r\n\r\nconst CharInfo = (props) => {\r\n  const [char, setChar] = useState(null);\r\n  // const [loading, setLoding] = useState(false);\r\n  // const [error, setError] = useState(false);\r\n  const {loading, error, getCharacter, clearError} = useMarvelServices();\r\n  // const marvelService = new useMarvelServices();\r\n\r\n  \r\n  useEffect(() => {\r\n    updateChar();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.charId]);\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    const {charId} = props;\r\n    if (!charId) {\r\n      return;\r\n    }\r\n    // onCharLoading();\r\n    getCharacter(charId).then(onCharLoaded);\r\n  };\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n    // setLoding(false);\r\n  };\r\n\r\n  // const onCharLoading = () => {\r\n  //   setLoding(true);\r\n  // };\r\n\r\n  // const onError = () => {\r\n  //   setLoding(false);\r\n  //   setError(true);\r\n  // };\r\n\r\n  const skeleton = char || loading || error ? null : <Skeleton />;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !char) ? (\r\n    <View char={char} />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"char__info\">\r\n      {skeleton}\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\n// class CharInfo extends Component {\r\n//   state = {\r\n//     char: null,\r\n//     loading: false,\r\n//     error: false,\r\n//   };\r\n\r\n//   marvelService = new MarvelService();\r\n\r\n//   componentDidMount() {\r\n//     this.updateChar();\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps) {\r\n//     if (this.props.charId !== prevProps.charId) {\r\n//       this.updateChar();\r\n//     }\r\n//   }\r\n\r\n//   updateChar = () => {\r\n//     const {charId} = this.props;\r\n//     if (!charId) {\r\n//       return;\r\n//     }\r\n\r\n//     this.onCharLoading();\r\n\r\n//     this.marvelService\r\n//       .getCharacter(charId)\r\n//       .then(this.onCharLoaded)\r\n//       .catch(this.onError);\r\n//   };\r\n\r\n//   onCharLoaded = (char) => {\r\n//     this.setState({\r\n//       char,\r\n//       loading: false,\r\n//     });\r\n//   };\r\n\r\n//   onCharLoading = () => {\r\n//     this.setState({\r\n//       loading: true,\r\n//     });\r\n//   };\r\n\r\n//   onError = () => {\r\n//     this.setState({\r\n//       loading: false,\r\n//       error: true,\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     const {char, loading, error} = this.state;\r\n\r\n//     const skeleton = char || loading || error ? null : <Skeleton />;\r\n//     const errorMessage = error ? <ErrorMessage /> : null;\r\n//     const spinner = loading ? <Spinner /> : null;\r\n//     const content = !(loading || error || !char) ? (\r\n//       <View char={char} />\r\n//     ) : null;\r\n\r\n//     return (\r\n//       <div className=\"char__info\">\r\n//         {skeleton}\r\n//         {errorMessage}\r\n//         {spinner}\r\n//         {content}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst View = ({char}) => {\r\n  const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n\r\n  let imgStyle = {objectFit: \"cover\"};\r\n  if (\r\n    thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n  ) {\r\n    imgStyle = {objectFit: \"contain\"};\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img src={thumbnail} alt={name} style={imgStyle} />\r\n        <div>\r\n          <div className=\"char__info-name\">{name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">{description}</div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      <ul className=\"char__comics-list\">\r\n        {comics.length > 0\r\n          ? null\r\n          : \"There is no comics with this character\"}\r\n        {comics.map((item, i) => {\r\n          // eslint-disable-next-line\r\n          if (i > 9) return;\r\n          return (\r\n            <li key={i} className=\"char__comics-item\">\r\n              {item.name}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  charId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState} from \"react\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n  const [selectdCharId, setSelectdCharId] = useState(null);\r\n\r\n  const onSelectChar = (id) => {\r\n    setSelectdCharId(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onSelectChar={onSelectChar} />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectdCharId} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import {Link} from \"react-router-dom\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div>\r\n      <ErrorMessage />\r\n      <p\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"24px\",\r\n        }}>\r\n        Page doesn't exist\r\n      </p>\r\n      <Link\r\n        style={{\r\n          display: \"block\",\r\n          textAlign: \"center\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"24px\",\r\n          marginTop: \"30px\",\r\n        }}\r\n        to=\"/MARVEL\">\r\n        Back to main page\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import \"./singleComicPage.scss\";\r\nimport {useEffect, useState} from \"react\";\r\nimport useMarvelServices from \"../../services/MarvelServices\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\n\r\nconst SingleComicPage = () => {\r\n  const [comic, setComic] = useState(null);\r\n  const {loading, error, getComics, clearError} = useMarvelServices();\r\n  const {comicId} = useParams();\r\n\r\n  useEffect(() => {\r\n    updateComics();\r\n  }, [comicId]);\r\n\r\n  const updateComics = () => {\r\n    clearError();\r\n    getComics(comicId).then(onComicsLoaded);\r\n  };\r\n\r\n  const onComicsLoaded = (comic) => {\r\n    setComic(comic);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !comic) ? (\r\n    <View comic={comic} />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"single-comic\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({comic}) => {\r\n  const {\r\n    title,\r\n    thumbnail,\r\n    price,\r\n    description,\r\n    pages,\r\n    descriptionLanguage,\r\n  } = comic;\r\n\r\n  return (\r\n    <>\r\n      <img src={thumbnail} alt=\"x-men\" className=\"single-comic__img\" />\r\n      <div className=\"single-comic__info\">\r\n        <h2 className=\"single-comic__name\">{title}</h2>\r\n        <p className=\"single-comic__descr\">{description}</p>\r\n        <p className=\"single-comic__descr\">{pages} </p>\r\n        <p className=\"single-comic__descr\">\r\n          Language: {descriptionLanguage}\r\n        </p>\r\n        <div className=\"single-comic__price\">{price} </div>\r\n      </div>\r\n      <Link to=\"/comics\" className=\"single-comic__back\">\r\n        Back to all\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleComicPage;\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport ComicsPage from \"../pages/ComicsPage\";\r\nimport MainPage from \"../pages/MainPage\";\r\nimport Page404 from \"../pages/Page404.js\";\r\nimport SingleComicPage from \"../pages/SingleComicPage\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <AppHeader />\r\n        <main>\r\n          <Routes>\r\n            <Route path=\"/MARVEL\" element={<MainPage />} />\r\n            <Route path=\"/comics\" element={<ComicsPage />} />\r\n            <Route\r\n              path=\"/comics/:comicId\"\r\n              element={<SingleComicPage />}\r\n            />\r\n            <Route path=\"*\" element={<Page404 />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// class App extends React.Component {\r\n//   state = {\r\n//     selectdCharId: null,\r\n//   };\r\n\r\n//   onSelectChar = (id) => {\r\n//     this.setState({selectdCharId: id});\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div className=\"app\">\r\n//         <AppHeader />\r\n//         <main>\r\n//           <ErrorBoundary>\r\n//             <RandomChar />\r\n//           </ErrorBoundary>\r\n//           <div className=\"char__content\">\r\n//             <ErrorBoundary>\r\n//               <CharList onSelectChar={this.onSelectChar} />\r\n//             </ErrorBoundary>\r\n//             <ErrorBoundary>\r\n//               <CharInfo charId={this.state.selectdCharId} />\r\n//             </ErrorBoundary>\r\n//           </div>\r\n//           <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n//         </main>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./components/app/App\";\r\nimport \"./style/style.scss\";\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\")).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n "],"sourceRoot":""}